get ---- request resoerce from server
post --- sending resoerce to server
put --- replace a resoerce by new data          // exp - change biycle with new bicyce
patch --- patch up a resoerce by new data / update      // exp - gives you a new tire so you can replace the prv with it
delete --- delete resoerces


nodemon --- custom server doesnt need to restart for changes if this is installed
npm i -g nodemon


res.redirect("/");

app.get("/", (req, res) => {
  res.send("<h1>Hello World</h1>");
});


app.listen(port, () => {
  console.log(`Server started on port ${port}`);
});


app.post("/register", (req, res) => {
  //Do something with the data
  res.sendStatus(201);
});


app.use(logger);

function logger(req , res , next){
  console.log("Request method: ", req.method);
  console.log("Request URL: ", req.url);
  // console.log("-------------------------------\n",req);
  next();
};


app.post("/check", (req, res) =>{
    var password = req.body.password
    // console.log(password);
    if(password==="jkjk"){
        res.sendFile(__dirname + "/public/secret.html");
    } else{
        // res.send("<p><b>Wrong</b></p>")
        // res.sendFile(__dirname + "/public/index.html");
        res.redirect("/");
    };
});



--------------------------------------------------------------

middlewares -------------------------------------------------


** the order of the middleware matters a lot

route handeler -------------------------------------------------

import { dirname } from "path";
import { fileURLToPath } from "url";      
const __dirname = dirname(fileURLToPath(import.meta.url));

__dirname - makes has the value of all the routes before the certain file path

ex - 

app.get("/", (req, res) => {
  res.sendFile(__dirname + "/public/index.html");                  ----- to send a certain file on get request
});


res.sendFile(__dirname + "/public/index.html");     ----- to send a certain file on get request




body parser ------------------------------------------------------


gives the values of a form in a key value format -- like dictonary

import bodyParser from "body-parser";

app.use(bodyParser.urlencoded({extended: true}));

app.post("/submit", (req, res) =>{
  console.log(req.body);
});



morgan --------------------

import morgan form "morgan";

app.use(morgan("combined"));



--------------------------------------------------------------------


middlewares catagories ---

pre-processing  --- ex- body-parser
auth
error
logging --- ex- morgan





----------------------------------------------------------------------

codesnippets------------------------------

3.1-----------

import express from "express";
const app = express();
const port = 3000;

app.listen(port, () => {
  console.log(`Server running on port ${port}.`);
});



3.2-------------

import express from "express";
const app = express();
const port = 3000;

app.get("/", (req, res) => {
  res.send("<h1>Hello World</h1>");
});

app.get("/about", (req, res) => {
  res.send("<h1>About Me</h1><p>My name is Fahim</p>");
});

app.get("/contact", (req, res) => {
  res.send("<h1>Contact Me</h1><p>Phone: +44123456789</p>");
});

app.listen(port, () => {
  console.log(`Server started on port ${port}`);
});



3.3-----------------

import express from "express";
const app = express();
const port = 3000;

// *********************
// Let’s practice using Postman. Make sure your server is running with nodemon.
// Then test the 5 different routes below with Postman. Open a separate tab for each request.
// Check that for each route you’re getting the correct status code returned to you from your server.
// You should not get any 404s or 500 status codes.
// *********************

app.get("/", (req, res) => {
  res.send("<h1>Home Page</h1>");
});

app.post("/register", (req, res) => {
  //Do something with the data
  res.sendStatus(201);
});

app.put("/user/fahim", (req, res) => {
  res.sendStatus(200);
});

app.patch("/user/fahim", (req, res) => {
  res.sendStatus(200);
});

app.delete("/user/fahim", (req, res) => {
  //Deleting
  res.sendStatus(200);
});

app.listen(port, () => {
  console.log(`Server started on port ${port}`);
});



3.4-------------


1----  body-parser

import express from "express";
import bodyParser from "body-parser";
import { dirname } from "path";
import { fileURLToPath } from "url";

const __dirname = dirname(fileURLToPath(import.meta.url));

const app = express();
const port = 3000;

app.use(bodyParser.urlencoded({extended: true}));

app.post("/submit", (req, res) =>{
  console.log(req.body);
});

app.get("/", (req, res) => {
  res.sendFile(__dirname + "/public/index.html");
});

app.listen(port, () => {
  console.log(`Listening on port ${port}`);
});




2---       morgan


import express from "express";
import morgan from "morgan";

const app = express();
const port = 3000;

app.use(morgan("tiny"));

app.get("/", (req, res) => {
  res.send("Hello");
});

app.listen(port, () => {
  console.log(`Listening on port ${port}`);
});




3----


import express from "express";

const app = express();
const port = 3000;

app.use(logger);

function logger(req , res , next){
  console.log("Request method: ", req.method);
  console.log("Request URL: ", req.url);
  // console.log("-------------------------------\n",req);
  next();
};

app.get("/", (req, res) => {
  res.send("Hello");;
});

app.listen(port, () => {
  console.log(`Listening on port ${port}`);
});




3.5 --------------------------------------

//To see how the final website should work, run "node solution.js".
//Make sure you have installed all the dependencies with "npm i".
//The password is ILoveProgramming

import express from "express";
import bodyParser from "body-parser";
import { dirname } from "path";
import { fileURLToPath } from "url";

const __dirname = dirname(fileURLToPath(import.meta.url));
const app = express();
const port = 3000;

app.use(bodyParser.urlencoded({extended: true}));

app.post("/check", (req, res) =>{
    var password = req.body.password
    // console.log(password);
    if(password==="jkjk"){
        res.sendFile(__dirname + "/public/secret.html");
    } else{
        // res.send("<p><b>Wrong</b></p>")
        // res.sendFile(__dirname + "/public/index.html");
        res.redirect("/");
    };
});

app.get("/", (req, res) => {
    res.sendFile(__dirname + "/public/index.html");
});


app.listen(port, () => {
  console.log(`Server running on port ${port}.`);
});


